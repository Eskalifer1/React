{"version":3,"file":"static/js/165.12b70c30.chunk.js","mappings":"iOAKIA,EAA0B,SAACC,GAC3B,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE3B,EACaE,EAAe,SAACC,GAAe,IAElCC,EAAiB,qGAMlB,OANkB,8BACnB,WACI,OAAKC,KAAKC,MAAMN,QAEZ,SAACG,GAAS,UAAKE,KAAKC,SAFO,SAAC,KAAQ,CAACC,GAAI,UAIjD,KAAC,EANkB,CAASC,EAAAA,WAUhC,OAFqCC,EAAAA,EAAAA,IAAQX,EAAyB,CAAC,EAAlCW,CAAqCL,EAG9E,C,gHCtBA,EAAyB,2BAAzB,EAA6D,2B,mBCa7D,EAVmB,SAACE,GAChB,IAAII,EAAI,mBAAeJ,EAAMK,IAE7B,OACI,gBAAKC,UAAWC,EAAe,UAC3B,SAAC,KAAO,CAACN,GAAIG,EAAME,UAAa,YAAW,SAARE,SAA0BD,OAAgBE,CAAS,EAAC,SAAET,EAAMU,QAG3G,ECXA,GAAgB,QAAU,yBAAyB,SAAW,0BAA0B,UAAY,2BAA2B,MAAQ,uBAAuB,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,wBCAlO,EAA8B,6BCM9B,EAJgB,SAACV,GACb,OAAO,gBAAKM,UAAWC,EAAoB,SAAEP,EAAMW,SACvD,ECuBMC,EAAc,SAACZ,GACjB,OACI,SAAC,KAAM,CACHa,cAAe,CAAEF,QAAS,IAE1BG,SAAW,SAACC,GAAYf,EAAMgB,WAAWD,EAAOJ,QAAQ,EACxDM,iBAAkBC,EAAAA,EAAc,SAE/B,kBACG,UAAC,KAAI,CAACZ,UAAWC,EAAAA,KAAa,WAC1B,0BACI,SAAC,KAAK,CAACD,UAAWC,EAAAA,MAAeG,KAAM,UAAWS,YAAa,aAAcC,KAAM,YAEvF,SAAC,KAAY,CAACd,UAAWC,EAAAA,MAAeG,KAAK,UAAUW,UAAU,SAEjE,mBAAQD,KAAM,SAAUd,UAAWC,EAAAA,KAAa,4BAC7C,GAIvB,EAEA,EA3CgB,SAACP,GACb,IAAIsB,EAAetB,EAAMuB,YAAYC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAU,CAACf,KAAMe,EAAKf,KAAoBL,GAAIoB,EAAKpB,IAAlBoB,EAAKpB,GAAmB,IACvGqB,EAAe1B,EAAM2B,YAAYH,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAO,CAACd,QAASc,EAAKd,SAAcc,EAAKpB,GAAM,IAEjG,OACI,iBAAKC,UAAWC,EAAAA,QAAgB,WAC5B,gBAAKD,UAAU,cAAa,SACvBgB,KAEL,iBAAKhB,UAAWC,EAAAA,SAAiB,WAC7B,yBACKmB,KAEL,gBAAKpB,UAAWC,EAAAA,UAAkB,UAC9B,SAACK,EAAW,CAACI,WAAYhB,EAAMgB,oBAKnD,E,8BCTA,GAAeY,EAAAA,EAAAA,KACXzB,EAAAA,EAAAA,KAZkB,SAACV,GACnB,MAAO,CACH8B,YAAa9B,EAAMoC,YAAYN,YAC/BI,YAAalC,EAAMoC,YAAYF,YAEvC,GAO6B,CAACX,WAAAA,EAAAA,IAC1BpB,EAAAA,EAFJ,CAGEkC,E,qCClBIZ,EAAgBa,EAAAA,KAAaC,MAAM,CACrCrB,QAASoB,EAAAA,KACJE,IAAI,EAAG,mBACPC,IAAI,IAAK,2BACTC,SAAS,cAGlB,K","sources":["HOC/AuthRedirect.js","webpack://react4/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://react4/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react4/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/FormValidation/DialogsFormScheme.js"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\nexport const AuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\r\n            return (\r\n                <Component {...this.props} />\r\n            )\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect, {})(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__gLEl8\",\"active\":\"DialogItem_active__J951S\"};","import React from 'react';\r\nimport classes from './DialogItem.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={path} className = {({ isActive }) => isActive ? classes.active: undefined}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__BWR-o\",\"messages\":\"Dialogs_messages__qig1a\",\"sendBlock\":\"Dialogs_sendBlock__2H8RY\",\"input\":\"Dialogs_input__5mCZ9\",\"Error\":\"Dialogs_Error__7YJok\",\"form\":\"Dialogs_form__j73Gg\",\"title\":\"Dialogs_title__Z9eqr\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageItem\":\"Message_messageItem__MAwzk\"};","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.messageItem}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport DialogsScheme from \"../FormValidation/DialogsFormScheme\";\r\nimport { Formik, Form, ErrorMessage, Field } from \"formik\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport classes from './Dialogs.module.css'\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsArray = props.DialogsData.map(item => <DialogItem name={item.name} key={item.id} id={item.id} />)\r\n    let messageArray = props.MessageData.map(item => <Message message={item.message} key={item.id} />)\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className=\"dialogsItem\">\r\n                {dialogsArray}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>\r\n                    {messageArray}\r\n                </div>\r\n                <div className={classes.sendBlock}>\r\n                    <FormDialogs addMessage={props.addMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FormDialogs = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ message: '' }}\r\n\r\n            onSubmit={ (values) => {props.addMessage(values.message)}}\r\n            validationSchema={DialogsScheme} >\r\n\r\n            {() => (\r\n                <Form className={classes.form}>\r\n                    <div>\r\n                        <Field className={classes.input} name={'message'} placeholder={'Enter text'} type={'text'} />\r\n                    </div>\r\n                    <ErrorMessage className={classes.Error} name=\"message\" component=\"div\" />\r\n\r\n                    <button type={'submit'} className={classes.send}>Send message</button>\r\n                </Form>\r\n            )}\r\n        </Formik >\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { connect } from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { AuthRedirect } from \"../../HOC/AuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport { addMessage } from \"../../redux/dialogReducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogsData: state.dialogsPage.DialogsData,\r\n        MessageData: state.dialogsPage.MessageData\r\n    }\r\n}\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         addMessage: () => { dispatch(addMessage()) }\r\n//     }\r\n// }\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    AuthRedirect\r\n)(Dialogs);","import * as Yup from \"yup\";\r\n\r\nconst DialogsScheme = Yup.object().shape({\r\n    message: Yup.string()\r\n        .min(1, 'Enter something')\r\n        .max(300, 'Write a little bit less')\r\n        .required(\"Required\")\r\n})\r\n\r\nexport default DialogsScheme;"],"names":["mapStateToPropsRedirect","state","isAuth","Auth","AuthRedirect","Component","RedirectComponent","this","props","to","React","connect","path","id","className","classes","isActive","undefined","name","message","FormDialogs","initialValues","onSubmit","values","addMessage","validationSchema","DialogsScheme","placeholder","type","component","dialogsArray","DialogsData","map","item","messageArray","MessageData","compose","dialogsPage","Dialogs","Yup","shape","min","max","required"],"sourceRoot":""}
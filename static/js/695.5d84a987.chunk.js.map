{"version":3,"file":"static/js/695.5d84a987.chunk.js","mappings":"0NACA,EAA4B,yBAA5B,EAA4D,oBAA5D,EAAuF,oBAAvF,EAAkH,oBAAlH,EAAgJ,uBAAhJ,EAAuL,6BAAvL,EAA2N,oBAA3N,EAAwP,sBAAxP,EAA8T,0B,mBCA9T,MAAiC,kCAAjC,EAA8E,4B,uECoC9E,EAjCgB,SAAH,GAGT,IAHqF,IAAtEA,EAAe,EAAfA,gBAAiBC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YAAaC,EAAY,EAAZA,aACnDC,GCJO,SAAkCC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,GAAS,EAAAC,EAAA,GAA6BL,EAAQC,GAElD,GAAIK,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBP,GACpD,IAAKG,EAAI,EAAGA,EAAIK,EAAiBC,OAAQN,IACvCD,EAAMM,EAAiBL,GACnBF,EAASS,QAAQR,IAAQ,GACxBI,OAAOK,UAAUC,qBAAqBC,KAAKb,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CAEF,CDXiF,MAC5DY,KAAKC,KAAKpB,EAAkBC,IACzCoB,EAAQ,GACHb,EAAI,EAAGA,GAAKJ,EAAYI,IAC7Ba,EAAMC,KAAKd,IAGfe,EAAAA,EAAAA,YAAU,kBAAMC,EAAiBL,KAAKC,KAAKlB,EAAcD,GAAU,GAAE,CAACC,IAEtE,IAAIuB,EAAeN,KAAKC,KAAKhB,EAAaH,GAC1C,GAAwCyB,EAAAA,EAAAA,UAAS,GAAE,eAA9CC,EAAa,KAAEH,EAAgB,KAChCI,GAAyBD,EAAgB,GAAK1B,EAAW,EACzD4B,EAAyBF,EAAgB1B,EAC7C,OACI,gCAEQ0B,EAAgB,IAAK,mBAAQG,QAAS,kBAAMN,EAAiBG,EAAgB,EAAE,EAAC,qBAGhFN,EACKU,QAAO,SAAAvB,GAAC,OAAIA,GAAKoB,GAAyBpB,GAAKqB,CAAsB,IACrEG,KAAI,SAAAC,GACD,OAAO,cAAGC,UAAWhC,IAAgB+B,EAAI,UAAOE,EAAsB,YAAIA,GAAsBA,EAAwBC,KAAK,IACzHN,QAAS,kBAAM3B,EAAa8B,EAAK,EAAC,SAAaA,GAAPA,EAChD,IAGJR,EAAeE,IAAiB,mBAAQG,QAAS,kBAAMN,EAAiBG,EAAgB,EAAE,EAAC,oBAI3G,E,mBEPA,EAvBW,SAAH,GAA4E,IAAtEU,EAAI,EAAJA,KAAMC,EAAoB,EAApBA,qBAAsBC,EAAe,EAAfA,gBAAiBC,EAAiB,EAAjBA,kBACvD,OACI,iBAAKN,UAAWC,EAAa,WACzB,iBAAKD,UAAWC,EAAgB,WAC5B,0BACI,SAAC,KAAO,CAACM,GAAI,YAAcJ,EAAKK,GAAG,UAC/B,gBAAKC,IAA2B,OAAtBN,EAAKO,OAAOC,MAAiBR,EAAKO,OAAOC,MAAQC,EAAWC,IAAI,YAAYb,UAAWC,QAGxGE,EAAKW,UACA,mBAAQC,SAAUX,EAAqBY,MAAK,SAAA1C,GAAC,OAAIA,IAAM6B,EAAKK,EAAE,IAAGZ,QAAS,kBAAMS,EAAgBF,EAAKK,GAAG,EACtGR,UAAWC,EAAsB,uBACnC,mBAAQc,SAAUX,EAAqBY,MAAK,SAAA1C,GAAC,OAAIA,IAAM6B,EAAKK,EAAE,IAAGZ,QAAS,kBAAMU,EAAkBH,EAAKK,GAAG,EACxGR,UAAWC,EAAsB,wBAE7C,iBAAKD,UAAWC,EAAa,WACzB,gBAAKD,UAAWC,EAAa,SAAEE,EAAKc,QACpC,gBAAKjB,UAAWC,EAAe,SAAEE,EAAKe,cAItD,ECNA,EAfY,SAACC,GACT,OACI,iBAAKnB,UAAWC,EAAkB,UAC7BkB,EAAMC,UAAUtB,KAAI,SAAAC,GAAI,OACrB,gBAAmBC,UAAWC,EAAa,UACxC,SAAC,EAAI,CAACE,KAAQJ,EAAMK,qBAAwBe,EAAMf,qBAAsBC,gBAAmBc,EAAMd,gBAAiBC,kBAAqBa,EAAMb,qBADtIP,EAAKS,GAET,KAEV,gBAAKR,UAAWC,EAAmB,UAC/B,SAAC,EAAS,CAACnC,gBAAmBqD,EAAME,eAAgBtD,SAAYoD,EAAMpD,SAAUC,YAAemD,EAAMnD,YAAaC,aAAgBkD,EAAMlD,mBAIxJ,E,UClBaqD,EAAe,SAACC,GACzB,OAAOA,EAAMC,UAAUJ,SAC3B,EACaK,EAAc,SAACF,GACxB,OAAOA,EAAMC,UAAUzD,QAC3B,EACa2D,EAAoB,SAACH,GAC9B,OAAOA,EAAMC,UAAUH,cAC3B,EACaM,EAAiB,SAACJ,GAC3B,OAAOA,EAAMC,UAAUxD,WAC3B,EACa4D,EAAgB,SAACL,GAC1B,OAAOA,EAAMC,UAAUK,UAC3B,EACaC,EAA0B,SAACP,GACpC,OAAOA,EAAMC,UAAUpB,oBAC3B,ECVM2B,EAAiB,qJAuBlB,OAvBkB,oCACnBC,OAAS,WACL,OAAO,gCACF,EAAKb,MAAMU,YAAa,SAACI,EAAA,EAAS,IAAM,MACzC,SAAC,EAAK,CACFZ,eAAgB,EAAKF,MAAME,eAC3BtD,SAAU,EAAKoD,MAAMpD,SACrBC,YAAa,EAAKmD,MAAMnD,YACxBoD,UAAW,EAAKD,MAAMC,UACtBnD,aAAc,EAAKA,aACnBmC,qBAAsB,EAAKe,MAAMf,qBACjCC,gBAAiB,EAAKc,MAAMd,gBAC5BC,kBAAmB,EAAKa,MAAMb,sBAG1C,EAAC,EAKDrC,aAAe,SAAC8B,GACZ,IAAKhC,EAAY,EAAKoD,MAAjBpD,SACL,EAAKoD,MAAMe,SAASnC,EAAMhC,EAC9B,EAAC,EAJA,OAIA,yCAPD,WACI,MAA8BoE,KAAKhB,MAA9BnD,EAAW,EAAXA,YAAaD,EAAQ,EAARA,SAClBoE,KAAKhB,MAAMe,SAASlE,EAAaD,EACrC,KAAC,EAnBkB,CAASqE,EAAAA,WAmChC,GAAeC,EAAAA,EAAAA,KAVO,SAACd,GACnB,MAAO,CACHH,UAAWE,EAAaC,GACxBxD,SAAU0D,EAAYF,GACtBF,eAAgBK,EAAkBH,GAClCvD,YAAa2D,EAAeJ,GAC5BM,WAAYD,EAAcL,GAC1BnB,qBAAsB0B,EAAwBP,GAEtD,GACwC,CACpCe,eAAAA,EAAAA,GACAC,kBAAAA,EAAAA,GACAL,SAAAA,EAAAA,GACA7B,gBAAAA,EAAAA,GACAC,kBAAAA,EAAAA,IALJ,CAMGyB,E","sources":["webpack://react4/./src/components/Users/Users.module.css?b9d0","webpack://react4/./src/components/Common/Paginator/Paginator.module.css?308c","components/Common/Paginator/Paginator.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersList\":\"Users_usersList__QG-ir\",\"logo\":\"Users_logo__kZfQh\",\"item\":\"Users_item__BtQfP\",\"info\":\"Users_info__dKQ-H\",\"profile\":\"Users_profile__QRklQ\",\"profileButton\":\"Users_profileButton__CQFLF\",\"name\":\"Users_name__shgt0\",\"status\":\"Users_status__ITHBb\",\"location\":\"Users_location__aUmN6\",\"pagination\":\"Users_pagination__7jftK\",\"paginationItem\":\"Users_paginationItem__FrCjL\",\"Selected\":\"Users_Selected__Cs1yv\"};","// extracted by mini-css-extract-plugin\nexport default {\"paginationItem\":\"Paginator_paginationItem__m9QG6\",\"Selected\":\"Paginator_Selected__H-2m+\"};","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport classes from './Paginator.module.css';\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChange, ...props }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    useEffect(() => setPortionNumber(Math.ceil(currentPage / pageSize)), [currentPage]);\r\n\r\n    let portionCount = Math.ceil(pagesCount / pageSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * pageSize + 1\r\n    let rightPortionPageNumber = portionNumber * pageSize;\r\n    return (\r\n        <>\r\n            {\r\n                portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>Previos</button>\r\n            }\r\n            {\r\n                pages\r\n                    .filter(i => i >= leftPortionPageNumber && i <= rightPortionPageNumber)\r\n                    .map(item => {\r\n                        return <a className={currentPage === item ? (`${classes.paginationItem} ${classes.Selected}`) : classes.paginationItem} href=\"#\"\r\n                            onClick={() => onPageChange(item)} key={item}>{item}</a>\r\n                    })\r\n            }\r\n            {\r\n                portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Paginator","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import React from \"react\";\r\nimport classes from './Users.module.css'\r\nimport userPhoto from '../../images/defaultLogo.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, isFollowingInProgres, setFollowStatus, setUnFollowStatus }) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <div className={classes.profile}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small !== null ? user.photos.small : userPhoto} alt=\"User logo\" className={classes.logo} />\r\n                    </NavLink>\r\n                </div>\r\n                {user.followed\r\n                    ? <button disabled={isFollowingInProgres.some(i => i === user.id)} onClick={() => setFollowStatus(user.id)}\r\n                        className={classes.profileButton}>UnFollow</button>\r\n                    : <button disabled={isFollowingInProgres.some(i => i === user.id)} onClick={() => setUnFollowStatus(user.id)}\r\n                        className={classes.profileButton}>Follow</button>}\r\n            </div>\r\n            <div className={classes.info}>\r\n                <div className={classes.name}>{user.name}</div>\r\n                <div className={classes.status}>{user.status}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from \"react\";\r\nimport classes from './Users.module.css'\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = (props) => {\r\n    return (\r\n        <div className={classes.usersList}>\r\n            {props.usersData.map(item =>\r\n                <div key={item.id} className={classes.item}>\r\n                   <User user = {item} isFollowingInProgres = {props.isFollowingInProgres} setFollowStatus = {props.setFollowStatus} setUnFollowStatus = {props.setUnFollowStatus}/>\r\n                </div>\r\n            )}\r\n            <div className={classes.pagination}>\r\n                <Paginator totalItemsCount = {props.totalUserCount} pageSize = {props.pageSize} currentPage = {props.currentPage} onPageChange = {props.onPageChange}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","export const getUsersData = (state) => {\r\n    return state.UsersPage.usersData;\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.UsersPage.pageSize;\r\n}\r\nexport const getTotalUserCount = (state) => {\r\n    return state.UsersPage.totalUserCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.UsersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.UsersPage.isFetching;\r\n}\r\nexport const getIsFollowingInProgres = (state) => {\r\n    return state.UsersPage.isFollowingInProgres;\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentPage, setTotalUserCount, getUsers, setFollowStatus, setUnFollowStatus } from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport { getCurrentPage, getIsFetching, getIsFollowingInProgres, getPageSize, getTotalUserCount, getUsersData } from \"../../redux/usersSelectors\";\r\n\r\nclass UsersAPIConponent extends React.Component {\r\n    render = () => {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                totalUserCount={this.props.totalUserCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                usersData={this.props.usersData}\r\n                onPageChange={this.onPageChange}\r\n                isFollowingInProgres={this.props.isFollowingInProgres}\r\n                setFollowStatus={this.props.setFollowStatus}\r\n                setUnFollowStatus={this.props.setUnFollowStatus}\r\n            />\r\n        </>\r\n    }\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n    onPageChange = (item) => {\r\n        let {pageSize} = this.props\r\n        this.props.getUsers(item, pageSize) //При кожному клацані на панігатор викликаємо запит на нових користувачів\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersData: getUsersData(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingInProgres: getIsFollowingInProgres(state)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    setCurrentPage,\r\n    setTotalUserCount,\r\n    getUsers,\r\n    setFollowStatus,\r\n    setUnFollowStatus\r\n})(UsersAPIConponent);"],"names":["totalItemsCount","pageSize","currentPage","onPageChange","pagesCount","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","Math","ceil","pages","push","useEffect","setPortionNumber","portionCount","useState","portionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","map","item","className","classes","href","user","isFollowingInProgres","setFollowStatus","setUnFollowStatus","to","id","src","photos","small","userPhoto","alt","followed","disabled","some","name","status","props","usersData","totalUserCount","getUsersData","state","UsersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","getIsFollowingInProgres","UsersAPIConponent","render","Preloader","getUsers","this","React","connect","setCurrentPage","setTotalUserCount"],"sourceRoot":""}